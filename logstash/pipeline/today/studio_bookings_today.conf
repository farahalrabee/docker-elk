input {
  tcp {
    port => 7000
}

     jdbc {
    jdbc_driver_library => "/usr/share/logstash/config/mysql-connector-java-5.1.44-bin.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://192.168.1.102:3306/live"
    jdbc_user => "farah"
    jdbc_password => "123456"
    type => 'studios'
    statement => "SELECT studios.id as studio_id , studios.city_id, studios.area_id, studios.name as studio_name, studios.description,studios.logo,studios.url,studios.cost_per_no_show,studios.cost_per_show,studios.address_1,studios.phone_1,studios.latitude,studios.longitude,studios.is_block,studios.created_at as studio_created_at , events.id as eid , events.name as event_name , events.description as event_desc , events.gender , events.created_at as event_created_at , events.activity_id as event_activity,schedules.start_time, schedules.end_time,schedules.event_id as schedule_event_id , bookings.id as booking_id , bookings.user_membership_id as booking_plan ,bookings.user_id as booking_user, bookings.schedule_id as booking_schedule, bookings.voucher_id as booking_voucher, bookings.user_show , bookings.is_delete booking_is_delete, bookings.cost_per_no_show, bookings.cost_per_show,bookings.created_at as booking_created_at   FROM `studios` LEFT join events on studios.id = events.studio_id LEFT JOIN schedules on events.id = schedules.event_id left join bookings on bookings.schedule_id = schedules.id where bookings.id is not NULL and  MONTH(studios.created_at)  = MONTH(CURDATE()) and  YEAR(studios.created_at)  = YEAR(CURDATE()) and  DAY(studios.created_at)  = DAY(CURDATE()) order by studios.id"

    schedule => "* * * * *"
    codec => "json"

  }

}

filter {

if [type] == "studios" {
aggregate {
  task_id => "%{studio_id}"
  code => "
 map['bookings'] ||= []
 
   event.to_hash.each do |key,value|
   map[key] = value unless map.has_key?(key)
   map[key] << value if map[key].is_a?(Array)
   end
  "
 
  push_previous_map_as_event => true
  timeout_tags => ['aggregated']

}
}
}


output {

if [type] == "studios" {
elasticsearch { 
hosts => ["elasticsearch:9200"]
index => "studios_bookings-%{+YYYY-MM-dd}"
document_type => "studio"
document_id =>  "%{studio_id}"
 }  
}
}


