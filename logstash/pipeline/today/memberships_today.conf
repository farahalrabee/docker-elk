input {
  tcp {
    port => 8000
}

   jdbc {
    jdbc_driver_library => "/usr/share/logstash/config/mysql-connector-java-5.1.44-bin.jar"
    jdbc_driver_class => "com.mysql.jdbc.Driver"
    jdbc_connection_string => "jdbc:mysql://192.168.1.102:3306/live"
    jdbc_user => "farah"
    jdbc_password => "123456"
    type => 'memberships'
    statement => "SELECT client_users.avatar,client_users.id as customer_id , client_users.name as username , client_users.email , client_users.language, client_users.phone_number,client_users.facebook_id,client_users.secondary_city_id,client_users.primary_city_id,client_users.created_at as user_created_at,user_memberships.id as user_memberships_id,user_memberships.membership_plan_id,user_memberships.voucher_id,user_memberships.expires_on,user_memberships.is_paused,user_memberships.created_at as membership_created_at,user_memberships.user_id as membership_user,user_memberships.is_delete FROM `client_users` left join user_memberships on client_users.id = user_memberships.user_id where MONTH(user_memberships.created_at)  = MONTH(CURDATE()) and  YEAR(user_memberships.created_at)  = YEAR(CURDATE()) and  DAY(user_memberships.created_at)  = DAY(CURDATE())"

    schedule => "* * * * *"
    codec => "json"

  }


}

filter {

    if [type]  == "memberships" {
mutate {
rename => { 

    "user_memberships_id" => "[memberships][user_memberships_id]" 
    "membership_plan_id" => "[memberships][membership_plan_id]" 
    "voucher_id" => "[memberships][voucher_id]" 
    "membership_user" => "[memberships][membership_user]" 
    "expires_on" => "[memberships][expires_on]" 
    "is_delete" => "[memberships][is_delete]" 
    "membership_created_at" => "[memberships][membership_created_at]" 

    }
    }

    }



if [type] == "memberships" {
aggregate {
  task_id => "%{customer_id}"
  code => "
    map['memberships'] ||= []
  
   event.to_hash.each do |key,value|
   map[key] = value unless map.has_key?(key)
   map[key] << value if map[key].is_a?(Array)
   end
  "
  push_previous_map_as_event => true
  timeout_tags => ['aggregated']

}
}

}


output {

  if [type] == "memberships" {
elasticsearch { 
hosts => ["elasticsearch:9200"]
index => "users_memberships-%{+YYYY-MM-dd}"
document_type => "user"
document_id =>  "%{customer_id}"
 }


}


}


